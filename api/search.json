[{"id":"8affe2b40892093e6017c37671babd79","title":"研学安排及记录","content":"介绍​         在2023年的4月17日-4月20日之间，我们年级将要去皖南皖北一带研学旅行，在这期间我们有如下的安排。\n研学游课程安排\n\n\n第一天\n乘车前往泾县-&gt;午饭-&gt;宣纸文化园-&gt;宣笔厂-&gt;晚餐及研学手册\n\n\n\n第二天\n早餐后去宏村-&gt;宏村-&gt;中餐-&gt;西溪南-&gt;屯溪老街-&gt;晚餐住宿\n\n\n第三天\n早餐-&gt;胡开文墨厂-&gt;徽州糕饼博物馆-&gt;午餐-&gt;谢裕大茶博园-&gt;晚餐晚会\n\n\n第四天\n早餐-&gt;翡翠谷-&gt;午餐-&gt;返程\n\n\n","slug":"研学安排及记录","date":"2023-04-16T10:38:11.000Z","categories_index":"研学游,旅行合集","tags_index":"旅行,记录,研学","author_index":"银河"},{"id":"ebca6bdf8d7c625f89692d318dff3d4c","title":"hexo站点建立","content":"1.环境准备下载nodejs和git：git，node在cmd中测试：\nnode -v\nnpm -v\ngit -v\n2.安装hexo在cmd中输入：\nnpm install -g hexo-cli\n以安装hexo。    安装后输入hexo -v测试。\n3.建立hexo博客  建立一个空文件夹，在这个文件夹中打开cmd，并输入hexo init以建立网站，并输入npm run server以启动服务。启动后大概如下：\n&gt; hexo-site@0.0.0 server\n&gt; hexo server\n\nINFO  Validating config\nINFO  Start processing\nINFO API data generated by Aurora v1.5.5\nINFO  Hexo is running at http:&#x2F;&#x2F;localhost:4000&#x2F; . Press Ctrl+C to stop. \nINFO Thanks for using Aurora v1.5.5\nINFO Check out the repo at: https:&#x2F;&#x2F;github.com&#x2F;auroral-ui&#x2F;hexo-theme-auroraora\n  请打开http://localhost:4000/查看网站。\n","slug":"hexo站点建立","date":"2023-04-16T00:52:33.769Z","categories_index":"hexo教程","tags_index":"","author_index":"银河"},{"id":"6a7c7298a4a45d23e98e89370cb7ccb0","title":"LeeCode-1.两数之和","content":"题目链接:跳转链接\n题目描述给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。\n你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。\n你可以按任意顺序返回答案。示例 1：\n输入：nums &#x3D; [2,7,11,15], target &#x3D; 9输出：[0,1]解释：因为 nums[0] + nums[1] &#x3D;&#x3D; 9 ，返回 [0, 1] 。示例 2：\n输入：nums &#x3D; [3,2,4], target &#x3D; 6输出：[1,2]示例 3：\n输入：nums &#x3D; [3,3], target &#x3D; 6输出：[0,1]\n思路及算法​        最容易想到的方法是枚举数组中的每一个数 x，寻找数组中是否存在 target - x。当我们使用遍历整个数组的方式寻找target - x时，需要注意到每一个位于x之前的元素都经和x匹配过，因此不需要再进行匹配。而每一个元素不能被使用两次，所以我们只需要在 x 后面的元素中寻找 target - x。\n实例代码class Solution &#123;\npublic:\n    vector&lt;int&gt; twoSum(vector&lt;int&gt;&amp; nums, int target) &#123;\n        int n &#x3D; nums.size();\n        for (int i &#x3D; 0; i &lt; n; ++i) &#123;\n            for (int j &#x3D; i + 1; j &lt; n; ++j) &#123;\n                if (nums[i] + nums[j] &#x3D;&#x3D; target) &#123;\n                    return &#123;i, j&#125;;\n                &#125;\n            &#125;\n        &#125;\n        return &#123;&#125;;\n    &#125;\n&#125;;","slug":"LeeCode-1-两数之和","date":"2023-04-15T04:59:37.000Z","categories_index":"LeeCode题解","tags_index":"LeeCode,简单题","author_index":"银河"},{"id":"f60710a1757cbf2c324f6116723484a3","title":"如何使用本站主题","content":"链接：极光主题文档\n","slug":"如何使用本站主题","date":"2023-04-15T05:22:05.000Z","categories_index":"hexo教程","tags_index":"hexo,教程","author_index":"银河"}]